version: 2
jobs:
  build:
    machine: true
    working_directory: '~/dcos-net'
    environment:
      - OTP_VERSION: "21.1"
    steps:
      - checkout
      - restore_cache:
          key: otp-build-21.1
      - run:
          name: Building OTP
          command: |
              if [ -d ~/src/otp ]; then
                  echo "Use pre-build OTP version"
                  exit 0
              fi

              set -xe
              ( mkdir -p ~/src && cd ~/src \
                && git clone --branch maint-21 https://github.com/erlang/otp.git )
              ( cd ~/src/otp \
                && git checkout 377f19f25aeec6939a6728bd0c4910086c22ccdc \
                && ./otp_build autoconf \
                && ./configure \
                && make -j$(getconf _NPROCESSORS_ONLN) )
      - save_cache:
          key: otp-build-21.1
          paths:
            - ~/src/otp
      - run:
          name: Installing OTP
          command: (cd ~/src/otp && sudo make install)
      - run:
          name: Installing libsodium
          command: |
              set -xe
              curl -LO https://launchpad.net/ubuntu/+archive/primary/+files/libsodium18_1.0.13-1_amd64.deb
              curl -LO https://launchpad.net/ubuntu/+archive/primary/+files/libsodium-dev_1.0.13-1_amd64.deb
              sudo dpkg -i libsodium18_1.0.13-1_amd64.deb
              sudo dpkg -i libsodium-dev_1.0.13-1_amd64.deb
      - run:
          name: Updating rebar3
          command: ./rebar3 update
      - run:
          name: Fetching dependencies
          command: ./rebar3 get-deps
      - run:
          name: Building
          command: ./rebar3 compile
      - run:
          name: Building OTP release
          command: ./rebar3 as prod release
      - run:
          name: Installing test dependencies
          command: |
              set -xe
              sudo apt-get update
              sudo apt-get install -y --no-install-recommends \
                  iproute2 dnsutils ipvsadm
      - run:
          name: Starting EPMD
          command: epmd -daemon
      - run:
          name: Checking eunit tests
          command: ./rebar3 eunit -v
      - run:
          name: Checking common tests
          command: ./rebar3 ct -v
      - run:
          name: Checking common tests as root
          command: sudo $(which escript) ./rebar3 ct -v
      - run:
          name: Running cross reference analysis
          command: ./rebar3 xref
      - run:
          name: Running static analyzer
          command: ./rebar3 dialyzer
      - run:
          name: Checking code style
          command: ./rebar3 as lint lint
      - run:
          name: Performing coverage analysis
          command: ./rebar3 as test cover
      - run:
          name: Generating cover report
          command: ./rebar3 as test covertool generate
      - run:
          name: Installing codecov
          command: pip install codecov
      - run:
          name: Sending cover report
          command: |
              codecov -X gcov -f _build/test/covertool/dcos_net.covertool.xml
              codecov -X gcov -f _build/test/covertool/dcos_dns.covertool.xml
              codecov -X gcov -f _build/test/covertool/dcos_l4lb.covertool.xml
              codecov -X gcov -f _build/test/covertool/dcos_overlay.covertool.xml
              codecov -X gcov -f _build/test/covertool/dcos_rest.covertool.xml
      - store_artifacts:
          path: ~/dcos-net/_build/test/logs
