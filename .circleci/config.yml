version: 2
jobs:
  build:
    machine: true
    working_directory: '~/dcos-net'
    steps:
      - checkout
      - restore_cache:
          key: otp-{{ arch }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Building OTP
          command: |
              set -xe
              if [ -d otp ]; then exit 0; fi # restored
              git clone --branch maint-22 https://github.com/erlang/otp.git otp
              git -C otp checkout b4fb2e5669acb02697d9a9ab168eb0fbff6f370c # 22.0.3
              ( cd otp && ./otp_build autoconf && ./configure )
              make -C otp -j$(getconf _NPROCESSORS_ONLN)
      - save_cache:
          key: otp-{{ arch }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - otp
      - run:
          name: Installing OTP
          command: sudo make -C otp install
      - restore_cache:
          key: libsodium-{{ arch }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Building libsodium
          command: |
              set -xe
              if [ -d libsodium ]; then exit 0; fi # restored
              git clone --branch stable https://github.com/jedisct1/libsodium.git
              git -C libsodium checkout b732443c442239c2e0184820e9b23cca0de0828c # 1.0.17
              ( cd libsodium && ./autogen.sh && ./configure )
              make -C libsodium -j$(getconf _NPROCESSORS_ONLN)
      - save_cache:
          key: libsodium-{{ arch }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - libsodium
      - run:
          name: Installing libsodium
          command: sudo make -C libsodium install
      - run:
          name: Updating rebar3
          command: ./rebar3 update
      - run:
          name: Fetching dependencies
          command: ./rebar3 get-deps
      - run:
          name: Building
          command: ./rebar3 compile
      - run:
          name: Building OTP release
          command: ./rebar3 as prod release
      - run:
          name: Installing test dependencies
          command: |
              set -xe
              sudo apt-get update
              sudo apt-get install -y --no-install-recommends \
                  iproute2 dnsutils ipvsadm
      - run:
          name: Starting EPMD
          command: epmd -daemon
      - run:
          name: Checking eunit tests
          command: ./rebar3 eunit --verbose
      - run:
          name: Collecting eunit cover reports
          command: |
              set -xe
              ./rebar3 as test cover
              ./rebar3 as test covertool generate
              ./rebar3 as test cover --reset
              mkdir _build/test/covertool/eunit
              mv _build/test/covertool/*.covertool.xml _build/test/covertool/eunit/
      - run:
          name: Checking common tests
          command: ./rebar3 ct --verbose --readable true
      - run:
          name: Collecting ct cover reports
          command: |
              set -xe
              ./rebar3 as test cover
              ./rebar3 as test covertool generate
              ./rebar3 as test cover --reset
              mkdir _build/test/covertool/ct
              mv _build/test/covertool/*.covertool.xml _build/test/covertool/ct/
      - run:
          name: Checking common tests as root
          command: sudo $(which escript) ./rebar3 ct --verbose --readable true
      - run:
          name: Collecting ct2 cover reports
          command: |
              set -xe
              ./rebar3 as test cover
              ./rebar3 as test covertool generate
              ./rebar3 as test cover --reset
              mkdir _build/test/covertool/ct2
              mv _build/test/covertool/*.covertool.xml _build/test/covertool/ct2/
      - run:
          name: Running cross reference analysis
          command: ./rebar3 xref
      - run:
          name: Running static analyzer
          command: ./rebar3 dialyzer
      - run:
          name: Checking code style
          command: ./rebar3 as lint lint
      - run:
          name: Installing codecov
          command: pip install codecov
      - run:
          name: Sending cover reports
          command: |
              set -xe
              codecov -X gcov -F eunit -f _build/test/covertool/eunit/*.covertool.xml
              codecov -X gcov -F ct -f _build/test/covertool/ct/*.covertool.xml
              codecov -X gcov -F ct2 -f _build/test/covertool/ct2/*.covertool.xml
      - store_artifacts:
          path: ~/dcos-net/_build/test/logs
